[{"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\index.tsx":"1","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\serviceWorker.ts":"2","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\App.tsx":"3","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\services\\api.tsx":"4","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\components\\index.tsx":"5","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\index.tsx":"6","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\services\\firebase.ts":"7","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Register.tsx":"8","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Welcome.tsx":"9","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\PasswordReset.tsx":"10","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\components\\PrivateRoute.tsx":"11","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\components\\PublicRoute.tsx":"12","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Login.tsx":"13","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\EditTopic\\EditTopicPage.tsx":"14","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Quiz\\QuizPage.tsx":"15","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Units\\UnitsPage.tsx":"16","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\EditTopic\\EditQuestionForm.tsx":"17","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Units\\UnitContainer.tsx":"18","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Quiz\\LivesContainer.tsx":"19","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Quiz\\QuestionContainer.tsx":"20","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Units\\TopicContainer.tsx":"21","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\models\\index.tsx":"22","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Splash.tsx":"23"},{"size":612,"mtime":1608665918217,"results":"24","hashOfConfig":"25"},{"size":5444,"mtime":1608665918230,"results":"26","hashOfConfig":"25"},{"size":1497,"mtime":1610053913638,"results":"27","hashOfConfig":"25"},{"size":8179,"mtime":1609875778627,"results":"28","hashOfConfig":"25"},{"size":116,"mtime":1608665918216,"results":"29","hashOfConfig":"25"},{"size":380,"mtime":1608665918228,"results":"30","hashOfConfig":"25"},{"size":1096,"mtime":1609875778628,"results":"31","hashOfConfig":"25"},{"size":3620,"mtime":1610081469864,"results":"32","hashOfConfig":"25"},{"size":855,"mtime":1609875778626,"results":"33","hashOfConfig":"25"},{"size":1841,"mtime":1608665918222,"results":"34","hashOfConfig":"25"},{"size":430,"mtime":1608665918214,"results":"35","hashOfConfig":"25"},{"size":424,"mtime":1608665918215,"results":"36","hashOfConfig":"25"},{"size":2323,"mtime":1610081103288,"results":"37","hashOfConfig":"25"},{"size":4624,"mtime":1609875778620,"results":"38","hashOfConfig":"25"},{"size":2542,"mtime":1609875778623,"results":"39","hashOfConfig":"25"},{"size":3489,"mtime":1608665918227,"results":"40","hashOfConfig":"25"},{"size":10336,"mtime":1609875778618,"results":"41","hashOfConfig":"25"},{"size":5063,"mtime":1608665918226,"results":"42","hashOfConfig":"25"},{"size":522,"mtime":1609875778621,"results":"43","hashOfConfig":"25"},{"size":2342,"mtime":1609875778622,"results":"44","hashOfConfig":"25"},{"size":2555,"mtime":1608665918226,"results":"45","hashOfConfig":"25"},{"size":1096,"mtime":1609875778617,"results":"46","hashOfConfig":"25"},{"size":1410,"mtime":1610053976641,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1e330v5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\index.tsx",[],["100","101"],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\serviceWorker.ts",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\App.tsx",["102","103","104","105","106","107","108","109","110","111","112","113"],"import React from \"react\";\r\nimport \"./styles/App.css\";\r\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\";\r\nimport Splash from './pages/Splash';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  Login,\r\n  Register,\r\n  Welcome,\r\n  PasswordReset,\r\n  Units,\r\n  Quiz,\r\n  EditTopic,\r\n} from \"pages\";\r\n\r\nimport { PrivateRoute, PublicRoute } from \"components\";\r\nimport { Button, Col, Container, Nav, Navbar, Row } from \"react-bootstrap\";\r\nimport { signOut, useUser } from \"services/api\";\r\n\r\nconst App: React.FC = () => {\r\n  const [user] = useUser();\r\n\r\n  const handleSignOut = async () => {\r\n    await signOut().then(() => {\r\n      console.log(\"signed out\");\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/\" component={Splash} />\r\n            <Route exact path=\"/passwordreset\" component={PasswordReset} />\r\n            <PrivateRoute exact path=\"/units\" component={Units} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/units/edit/:unit_id/:topic_id\"\r\n              component={EditTopic}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/units/quiz/:unit_id/:topic_id\"\r\n              component={Quiz}\r\n            />\r\n          </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\services\\api.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\components\\index.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\index.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\services\\firebase.ts",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Register.tsx",["114","115"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, FormControl, Col, Row } from \"react-bootstrap\";\r\nimport { register, signOut } from \"services/api\";\r\nimport { Role } from \"models\";\r\nimport '../styles/Register.css';\r\n\r\nconst Register: React.FC = () => {\r\n  const [email, setEmail] = useState<string>();\r\n  const [password, setPassword] = useState<string>();\r\n  const [confirmPassword, setConfirmPassword] = useState<string>();\r\n  const [role, setRole] = useState<string>();\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    if (!email || !password || !confirmPassword || !role) {\r\n      console.log(\"got empty value from form\");\r\n    } else if (password !== confirmPassword) {\r\n      alert(\"passwords must match\");\r\n    } else {\r\n      let derivedRole: Role;\r\n      if (role === \"student\") {\r\n        derivedRole = \"student\";\r\n      } else if (role === \"teacher\") {\r\n        derivedRole = \"teacher\";\r\n      } else {\r\n        derivedRole = \"student\";\r\n      }\r\n\r\n      // TODO: Make role setting not terrible\r\n\r\n      register(email, password, derivedRole).then(\r\n        () => {\r\n          console.log(\"registered successfully\");\r\n          return signOut();\r\n        },\r\n        (error) => {\r\n          alert(error);\r\n        }\r\n      );\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      \r\n      <div className=\"register-title\">\r\n        REGISTER\r\n      </div>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            placeholder=\"Email\"\r\n            className=\"register-field\"\r\n            required\r\n            type=\"email\"\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n          />\r\n          <FormControl.Feedback type=\"invalid\">\r\n            Please enter email\r\n          </FormControl.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            placeholder=\"Password\"\r\n            className=\"register-field\"\r\n            required\r\n            type=\"password\"\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n          />\r\n          <FormControl.Feedback type=\"invalid\">\r\n            Please enter password\r\n          </FormControl.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            placeholder=\"Confirm Password\"\r\n            className=\"register-field\"\r\n            required\r\n            type=\"password\"\r\n            onChange={(event) => {\r\n              setConfirmPassword(event.target.value);\r\n            }}\r\n          />\r\n          <FormControl.Feedback type=\"invalid\">\r\n            Please confirm password\r\n          </FormControl.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            placeholder=\"Choose Role\"\r\n            className=\"register-field\"\r\n            required\r\n            as=\"select\"\r\n            onChange={(event) => {\r\n              setRole(event.target.value);\r\n            }}\r\n          >\r\n            <option value=\"\" disabled selected>Role</option>\r\n            <option value=\"student\">Student</option>\r\n            <option value=\"teacher\">Teacher</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button className=\"register-btn\" type=\"submit\">\r\n          CREATE ACCOUNT\r\n        </Button>\r\n        <div className=\"login-forgot-password\">\r\n          <Link to=\"/login\"> HAVE AN ACCOUNT? </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Welcome.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\PasswordReset.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\components\\PrivateRoute.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\components\\PublicRoute.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Login.tsx",["116","117","118"],"import React, { useState } from \"react\";\r\nimport { Form, Button, FormControl, Col, Row, InputGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"services/api\";\r\nimport '../styles/Login.css';\r\nimport mouse_logo from '../images/vertical_mouse.svg';\r\n\r\nconst Login: React.FC = () => {\r\n  const [email, setEmail] = useState<string>();\r\n  const [password, setPassword] = useState<string>();\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    if (!email || !password) {\r\n      console.log(\"got empty values from required inputs\");\r\n    } else {\r\n      login(email, password).then(\r\n        () => {\r\n          console.log(\"successfully logged in\");\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n          alert(error);\r\n        }\r\n      );\r\n    }\r\n    event.preventDefault()\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-field-container\">   \r\n        <img src={mouse_logo} className=\"login-img\"/>\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              className=\"login-field\"\r\n              placeholder=\"Email\"\r\n              required\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setEmail(event.target.value);\r\n              }}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter email\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputGroup>\r\n            <Form.Control\r\n              className=\"login-field\"\r\n              placeholder=\"Password\"\r\n              required\r\n              type=\"password\"\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n            />\r\n            </InputGroup>\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter password\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"login-login-btn\">\r\n            SIGN IN\r\n          </Button>\r\n          <div className=\"login-forgot-password\">\r\n            <Link to=\"/forgotpassword\"> FORGOT PASSWORD </Link>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\EditTopic\\EditTopicPage.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Quiz\\QuizPage.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Units\\UnitsPage.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\EditTopic\\EditQuestionForm.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Units\\UnitContainer.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Quiz\\LivesContainer.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Quiz\\QuestionContainer.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Units\\TopicContainer.tsx",[],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\models\\index.tsx",[],["119","120"],"C:\\Users\\Niaz\\Desktop\\quizapp\\src\\pages\\Splash.tsx",["121"],"import React from 'react';\r\nimport '../styles/Splash.css';\r\nimport {Container} from \"react-bootstrap\";\r\nimport splash_logo from '../images/splash_logo.svg';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Splash: React.FC =  () => {\r\n    return(\r\n        <div className=\"splash-container\" >\r\n            <div className=\"splash-logo-title-wrap mt-5\">\r\n                <span className=\"splash-logo-title-one\">coding</span>\r\n                <span className=\"splash-logo-title-two\">KIDZ</span>\r\n            </div>\r\n            <div className=\"splash-logo-img-wrap mt-5\">\r\n                <div className=\"splash-logo-circle-portrait mt-5\">\r\n                    <img src={splash_logo} alt=\"logo\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"splash-caption-wrap mt-5\">\r\n                <div className=\"splash-logo-caption\">\r\n                    lorem ipsum dolor sit amet, cosnectetur adipiscing elit.\r\n                </div>\r\n            </div> \r\n            <div className=\"splash-button-wrap mt-3\">\r\n                <div className=\"splash-button splash-button-one\">\r\n                    <Link to=\"/login\"> LOG IN </Link>  \r\n                </div>\r\n                <div className=\"splash-button splash-button-two\" >\r\n                    <Link to=\"/register\"> SIGN UP </Link>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n} \r\n\r\n\r\n\r\nexport default Splash; \r\n\r\n\r\n",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":25,"nodeType":"128","messageId":"129","endLine":3,"endColumn":33},{"ruleId":"126","severity":1,"message":"130","line":3,"column":35,"nodeType":"128","messageId":"129","endLine":3,"endColumn":39},{"ruleId":"126","severity":1,"message":"131","line":11,"column":3,"nodeType":"128","messageId":"129","endLine":11,"endColumn":10},{"ruleId":"126","severity":1,"message":"132","line":18,"column":24,"nodeType":"128","messageId":"129","endLine":18,"endColumn":35},{"ruleId":"126","severity":1,"message":"133","line":19,"column":10,"nodeType":"128","messageId":"129","endLine":19,"endColumn":16},{"ruleId":"126","severity":1,"message":"134","line":19,"column":18,"nodeType":"128","messageId":"129","endLine":19,"endColumn":21},{"ruleId":"126","severity":1,"message":"135","line":19,"column":23,"nodeType":"128","messageId":"129","endLine":19,"endColumn":32},{"ruleId":"126","severity":1,"message":"136","line":19,"column":34,"nodeType":"128","messageId":"129","endLine":19,"endColumn":37},{"ruleId":"126","severity":1,"message":"137","line":19,"column":39,"nodeType":"128","messageId":"129","endLine":19,"endColumn":45},{"ruleId":"126","severity":1,"message":"138","line":19,"column":47,"nodeType":"128","messageId":"129","endLine":19,"endColumn":50},{"ruleId":"126","severity":1,"message":"139","line":23,"column":10,"nodeType":"128","messageId":"129","endLine":23,"endColumn":14},{"ruleId":"126","severity":1,"message":"140","line":25,"column":9,"nodeType":"128","messageId":"129","endLine":25,"endColumn":22},{"ruleId":"126","severity":1,"message":"134","line":3,"column":37,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"126","severity":1,"message":"138","line":3,"column":42,"nodeType":"128","messageId":"129","endLine":3,"endColumn":45},{"ruleId":"126","severity":1,"message":"134","line":2,"column":37,"nodeType":"128","messageId":"129","endLine":2,"endColumn":40},{"ruleId":"126","severity":1,"message":"138","line":2,"column":42,"nodeType":"128","messageId":"129","endLine":2,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":32,"column":9,"nodeType":"143","endLine":32,"endColumn":54},{"ruleId":"122","replacedBy":"144"},{"ruleId":"124","replacedBy":"145"},{"ruleId":"126","severity":1,"message":"135","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Welcome' is defined but never used.","'PublicRoute' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Row' is defined but never used.","'user' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["146"],["147"],"no-global-assign","no-unsafe-negation"]